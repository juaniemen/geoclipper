<script>

  $(document).ready(function () {
// Some logic to retrieve, or generate tree structure
    var tree = <%= raw @tree_view.to_json %>;
    var selectedNode;
    var idPath;
    var nodeAux;


    function scan(obj) {
      var k = 'text';
      if (obj instanceof Object) {
        for (k in obj) {
          if (obj.hasOwnProperty(k)) {
            //recursive call to scan property
            scan(obj[k]);
            if (obj[k] != null) {
              obj[k].selectable = false;
              if (obj[k].nodes == null) {
                obj[k].selectable = true;
              }
            }
          }
        }
      } else {
        //not an Object so obj[k] here is a value
      }
      ;

    };

    scan(tree)

    var a = $('#tree').treeview({
      data: tree,
      backColor: '#93C54B',
    });

    a;

    $('#tree').on('nodeSelected', function (event, data) {
      selectedNode = data['nodeId'].toString();
      nodeAux = data['nodeId']
      idPath = getPathNode();
      $('#mapModal').modal('show');


    });

    function loadMap2(geojson) {
      proj4.defs("EPSG:25830","+proj=utm +zone=30 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs");
      proj4.defs("urn:ogc:def:crs:EPSG::25830","+proj=utm +zone=30 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs");

      var vectorSource = new ol.source.Vector({
        features: (new ol.format.GeoJSON()).readFeatures(geojson)
      });

      var vectorLayer = new ol.layer.Vector({
        source: vectorSource
      });
      var map = new ol.Map({
        target: 'map-canvas',
        layers: [
          new ol.layer.Tile({
            source: new ol.source.OSM()
          }), vectorLayer
        ],
        view: new ol.View({
          center:[52.5243700 , 13.4105300],
          zoom:2

        })
      });
    };
    data1 = '';


    function llamadaAsynGeoJson() {
      url = '/data/jsonToMap'

      $.ajax({
        type: "POST",
        url: url,
        data: {shp_name: idPath},
        success: function (data) {
          console.log('Los datos vienen de vuelta');
          loadMap2(JSON.parse(data['data']));
        },
        dataType: 'json'
      });
    }


    $('#mapModal').on('show.bs.modal', function () {
      $('#nodePath').append(idPath)
      $('#linkToDownloadShp').attr("href", "downloadShp/" + idPath)
      $('#linkToRemove').attr("href", "remove/" + idPath)
      $('#linkToDownloadCsv').attr("href", "downloadCsv/" + idPath)



    });

    $('#mapModal').on('shown.bs.modal', function () {
      llamadaAsynGeoJson();



    });


    $('#mapModal').on('hidden.bs.modal', function () {


      $('#map-canvas').empty();
      $('#nodePath').empty();
      $('#tree').treeview('unselectNode', [nodeAux, {silent: false}]);
      selectedNode = null;
      nodeAux = null;
//      $('#result').empty();
    });

    function getPathNode() {
      node = $('#tree').treeview('getNode', selectedNode);
      resultAux = getPathNodeAux(node, '');
      return resultAux.substr(0, resultAux.length - 1);
    };


    function getPathNodeAux(node, pathNode) {
      pathNode1 = node['text'] + "_" + pathNode;
      node1 = $('#tree').treeview('getParent', node);
      if (node1['nodeId'] == 0) {
        return pathNode1;
      } else {
        return getPathNodeAux(node1, pathNode1);
      }
    }
  });


</script>

