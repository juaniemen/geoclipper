<script>

  $(document).ready(function () {
// Some logic to retrieve, or generate tree structure
    var tree = <%= raw @tree_view.to_json %>;
    var idPath;
    var dataParaSelect;
    var htmlResponse;
    var nodeAux;
    var selectToDelete;
//    var nodesToClip = new Array();

    function scan(obj) {
      var k = 'text';
      if (obj instanceof Object) {
        for (k in obj) {
          if (obj.hasOwnProperty(k)) {
            //recursive call to scan property
            scan(obj[k]);
            if (obj[k] != null) {
              obj[k].selectable = false;
              if (obj[k].nodes == null) {
                obj[k].selectable = true;
              }
            }
          }
        }
      } else {
        //not an Object so obj[k] here is a value
      }
      ;

    };

    scan(tree)

    var a = $('#tree').treeview({
      data: tree,
      backColor: '#93C54B',
    });

    a;

    $('#tree').on('nodeSelected', function (event, data) {
      console.log(data);
      nodeAux = data['nodeId'];
      idPath = getPathNode();
      cargaAtributos();

      $('#modalForm').modal('show');


    });

    $('#modalForm').on('shown.bs.modal', function () {


    });

    function cargaAtributos() {
      url = '/data/tables'

      $.ajax({
        type: "POST",
        url: url,
        data: {id: idPath},
        success: function (data) {
          console.log('Los datos vienen de vuelta' + data['data']['id']);
          dataParaSelect = data;
          $('#formSelectTable').append(data['data']['htmlResponse']);
        },
        dataType: 'json'
      });
    }

    $.fn.serializeObject = function () {
      var o = {};
      var a = this.serializeArray();
      $.each(a, function () {
        if (o[this.name] !== undefined) {
          if (!o[this.name].push) {
            o[this.name] = [o[this.name]];
          }
          o[this.name].push(this.value || '');
        } else {
          o[this.name] = this.value || '';
        }
      });
      return o;
    };

    function ocultaRevelaBotones(){
      longitudClip = nodesToClip.length
      if(longitudClip  >= 1){
        $('#clearListSelected').show()
        if(longitudClip >= 2){
          $('#clipNow').show();
        }else{
          $('#clipNow').hide();
        }
      }else{
        $('#clearListSelected').hide();
        $('#clipNow').hide();
      }
    };

    function printeaListToClip(dataArray) {
      dataArrayFinal = JSON.stringify(dataArray);
      console.log('Mando printea List')
      url = '/data/listToClip';
      $.ajax({
        type: "POST",
        url: url,
        data: {dataArray: dataArrayFinal, nodeId: selectToDelete},
        success: function (data) {
          console.log('Los datos vienen de vuelta' + data.toString());
          $('#listSelected').append(data['data']['htmlResponse']);
          nodesToClip.push({dataArray: dataArray, nodeId: selectToDelete});
          nodeAux = null;
          ocultaRevelaBotones();

        },
        dataType: 'json'
      });

    };


    function createListCrea() {
      console.log('AL menos aquí si entra')
      printeaListToClip($('#formAttrTable').serializeObject());

//      $('#result').text(JSON.stringify($('#formAttrTable').serializeObject()));
      return false;
    };

    $('#modalForm').on('hide.bs.modal', function () {
      selectToDelete = nodeAux;
      createListCrea();


      // Conjunto de nodos que cumplen el patrón, se espera solo 1
      $('#tree').treeview('disableNode', selectToDelete, {silent: true});
      $('#tree').treeview('unselectNode', [nodeAux, {silent: true}]);
      nodeAux = null;
    });

    $('#clearListSelected').on('click', function () {
      $('#listSelected').empty();
      nodesToClip = new Array();
      nodeAux = null;
      $('#clearListSelected').hide();
      $('#clipNow').hide();
      $('#tree').treeview('enableAll', { silent: true });

    });

    function gestionaSubmit(datos){
      if(datos['status']=='successClip'){
        console.log(datos);

        // Seteo contenido
        idPath = datos['table'];
        $('#content').prepend(datos['modal'])
        // No cargamos el mapa pues se hará al mostrar el modal
        $('#listSelected').empty();
        $('#layerName').attr("value", "");
        nodesToClip = new Array();
        nodeAux = null;

        // Seteo botones del clipper
        $('#clearListSelected').hide();
        $('#clipNow').hide();


        // Seteo valores del modal
        $('#tree').treeview('enableAll', { silent: true });
        $('#nodePath').append(idPath)
        link = "downloadShp/" + datos['table']
        $('#linkToDownloadShp').attr("href", link)
        $('#mapModal').modal('show')

      }else{
          var dialogInstance = new BootstrapDialog();
          dialogInstance.setTitle('ERROR');
          dialogInstance.setMessage(datos['message']);
          dialogInstance.setType(BootstrapDialog.TYPE_DANGER);
          dialogInstance.open();
          $('#layerName').attr("value", "");
          nodesToClip = new Array();
          nodeAux = null;

          // Seteo botones del clipper
          $('#clearListSelected').hide();
          $('#clipNow').hide();
          $('#tree').treeview('enableAll', {silent: true});

        }
    }
    $('#clipNow').on('click', function () {
      datosParaSubmit = [];
      nodesToClip.forEach(function(n){
        datosParaSubmit.push(n['dataArray']);
      });
      url = '/data/clipNow';
      $.ajax({
        type: "POST",
        url: url,
        data: {clipData: datosParaSubmit, layerName: $('#layerName').val()},
        success: function (data) {
          $('#listSelected').empty();
          nodesToClip = new Array();
          nodeAux = null;
          gestionaSubmit(data);

        },
        error: function (data) {
          alert('No se ha podido clipear')
        }
      });
    });


//      $.get('url'), {
//        data: {format: 'json'},
//        success: function (data) {
//          data1 = data;
//          loadMap(data);
//          alert('Me ha llegado')
//        },
//        error: function () {
//          alert('No se pudo cargar el mapa')
//        }
//      };
//    }

    $('#modalForm').on('hide.bs.modal', function () {
      $('#formSelectTable').empty();
      nodeAux = null;
    });

    function getPathNode() {
      node = $('#tree').treeview('getNode', nodeAux);
      resultAux = getPathNodeAux(node, '');
      return resultAux.substr(0, resultAux.length - 1);
    };

    function getPathNodeAux(node, pathNode) {
      pathNode1 = node['text'] + "_" + pathNode;
      node1 = $('#tree').treeview('getParent', node);
      if (node1['nodeId'] == 0) {
        return pathNode1;
      } else {
        return getPathNodeAux(node1, pathNode1);
      }
    }

    function loadMap2(geojson) {
      var vectorSource = new ol.source.Vector({
        features: (new ol.format.GeoJSON()).readFeatures(geojson)
      });

      var vectorLayer = new ol.layer.Vector({
        source: vectorSource
      });
      var map = new ol.Map({
        target: 'map-canvas',
        layers: [
          new ol.layer.Tile({
            source: new ol.source.OSM()
          }), vectorLayer
        ],
        view: new ol.View({
          center:[40.2632613,-7.0127214],
          zoom:2

        })
      });
    };
    data1 = '';


    function llamadaAsynGeoJson() {
      url = '/data/jsonToMap'

      $.ajax({
        type: "POST",
        url: url,
        data: {shp_name: idPath},
        success: function (data) {
          console.log('Los datos vienen de vuelta');
          loadMap2(JSON.parse(data['data']));
        },
        dataType: 'json'
      });
    }

    $('#mapModal').on('show.bs.modal', function () {
      linkOf = "downloadShp/" + idPath
      $('#linkToDownloadShp').attr("href", linkOf)

    });

    $('#mapModal').on('shown.bs.modal', function () {
      llamadaAsynGeoJson();



    });


    $('#mapModal').on('hide.bs.modal', function () {
      $('#map').empty();
      $('#nodePath').empty();
      location.reload()

    });


  });

</script>

