<script>

  $(document).ready(function () {
// Some logic to retrieve, or generate tree structure
    var tree = <%= raw @tree_view.to_json %>;
    var selectedNode;
    var idPath;
    var dataParaSelect;
    var htmlResponse;
    var nodeAux;
    var nodesToClip = new Array();

    function scan(obj) {
      var k = 'text';
      if (obj instanceof Object) {
        for (k in obj) {
          if (obj.hasOwnProperty(k)) {
            //recursive call to scan property
            scan(obj[k]);
            if (obj[k] != null) {
              obj[k].selectable = false;
              if (obj[k].nodes == null) {
                obj[k].selectable = true;
              }
            }
          }
        }
      } else {
        //not an Object so obj[k] here is a value
      }
      ;

    };

    scan(tree)

    var a = $('#tree').treeview({
      data: tree,
      backColor: '#93C54B',
    });

    a;

    $('#tree').on('nodeSelected', function (event, data) {
      selectedNode = data['nodeId'].toString();
      nodeAux = data['nodeId'];
      idPath = getPathNode();
      cargaAtributos();

      $('#modalForm').modal('show');


    });

    $('#modalForm').on('shown.bs.modal', function () {


    });

    function cargaAtributos() {
      url = '/data/tables'

      $.ajax({
        type: "POST",
        url: url,
        data: {id: idPath},
        success: function (data) {
          console.log('Los datos vienen de vuelta' + data['data']['id']);
          dataParaSelect = data;
          $('#formSelectTable').append(data['data']['htmlResponse']);
        },
        dataType: 'json'
      });
    }

    $.fn.serializeObject = function () {
      var o = {};
      var a = this.serializeArray();
      $.each(a, function () {
        if (o[this.name] !== undefined) {
          if (!o[this.name].push) {
            o[this.name] = [o[this.name]];
          }
          o[this.name].push(this.value || '');
        } else {
          o[this.name] = this.value || '';
        }
      });
      return o;
    };

    function printeaListToClip(dataArray) {
      dataArrayFinal = JSON.stringify(dataArray);
      console.log('Mando printea List')
      url = '/data/listToClip';
      $.ajax({
        type: "POST",
        url: url,
        data: {dataArray: dataArrayFinal, nodeId: nodeAux},
        success: function (data) {
          console.log('Los datos vienen de vuelta' + data.toString());
          $('#listSelected').append(data['data']['htmlResponse']);
          nodesToClip.push = {dataArray: dataArray, nodeId: nodeAux};
          nodeAux = null;
//          longitudClip = nodesToClip.length;
//          if(longitudClip  >= 1){
//            revelaClean();
//            if(longitudClip >= 2){
//              revelaClip();
//            }else{
//              ocultaClip();
//            }
//          }else{
//            ocultaClean();
//            ocultaClip();
//          }
        },
        dataType: 'json'
      });

    };


    function createListCrea() {
      console.log('AL menos aquí si entra')
      printeaListToClip($('#formAttrTable').serializeObject());

//      $('#result').text(JSON.stringify($('#formAttrTable').serializeObject()));
      return false;
    };

    $('#modalForm').on('hide.bs.modal', function () {
      nodeFinal = nodeAux;
      createListCrea();


      // Conjunto de nodos que cumplen el patrón, se espera solo 1
      $('#tree').treeview('disableNode', nodeFinal, {silent: true});
      $('#tree').treeview('unselectNode', [nodeAux, {silent: true}]);
      nodeAux = null;
    });

    $('#clearListSelected').on('click', function () {
      $('#listSelected').empty();
      nodesToClip = new Array();
      nodeAux = null;
      selectedNode = null;
      $('#tree').treeview('enableAll', { silent: true });

    });


//      $.get('url'), {
//        data: {format: 'json'},
//        success: function (data) {
//          data1 = data;
//          loadMap(data);
//          alert('Me ha llegado')
//        },
//        error: function () {
//          alert('No se pudo cargar el mapa')
//        }
//      };
//    }

    $('#modalForm').on('hidden.bs.modal', function () {
      $('#formSelectTable').empty();
      selectedNode = null;
      nodeAux = null;
    });

    function getPathNode() {
      node = $('#tree').treeview('getNode', selectedNode);
      resultAux = getPathNodeAux(node, '');
      return resultAux.substr(0, resultAux.length - 1);
    };

    function getPathNodeAux(node, pathNode) {
      pathNode1 = node['text'] + "_" + pathNode;
      node1 = $('#tree').treeview('getParent', node);
      if (node1['nodeId'] == 0) {
        return pathNode1;
      } else {
        return getPathNodeAux(node1, pathNode1);
      }
    }


  });

</script>

